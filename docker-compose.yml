version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fuga-postgres
    environment:
      POSTGRES_DB: fuga_music_db
      POSTGRES_USER: fuga_user
      POSTGRES_PASSWORD: fuga_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fuga_user -d fuga_music_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fuga-network

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fuga-backend
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: fuga_music_db
      DB_USER: fuga_user
      DB_PASSWORD: fuga_password
      LOG_LEVEL: debug
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fuga-network
    command: npm run dev

  # Frontend (placeholder for Phase 2)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: fuga-frontend
  #   ports:
  #     - "5173:5173"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   depends_on:
  #     - backend
  #   networks:
  #     - fuga-network

volumes:
  postgres_data:
    driver: local

networks:
  fuga-network:
    driver: bridge
